"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[network]/page",{

/***/ "(app-pages-browser)/./src/lib/dbUtils.ts":
/*!****************************!*\
  !*** ./src/lib/dbUtils.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var idb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! idb */ \"(app-pages-browser)/./node_modules/idb/build/index.js\");\n\nclass DbService {\n    async initDB() {\n        return (0,idb__WEBPACK_IMPORTED_MODULE_0__.openDB)(this.DB_NAME, this.DB_VERSION, {\n            upgrade: (db)=>{\n                if (!db.objectStoreNames.contains(this.STORE_NAME)) {\n                    db.createObjectStore(this.STORE_NAME);\n                }\n            }\n        });\n    }\n    async saveMnemonicToDB(mnemonic, keyPairs) {\n        const db = await this.initDB();\n        const store = db.transaction(this.STORE_NAME, \"readwrite\").objectStore(this.STORE_NAME);\n        const existingData = await store.get(\"sol\") || {};\n        existingData[mnemonic] = {\n            keyPairs\n        };\n        await store.put(existingData, \"sol\");\n    }\n    async getMnemonicFromDB() {\n        const db = await this.initDB();\n        const store = db.transaction(this.STORE_NAME, \"readonly\").objectStore(this.STORE_NAME);\n        const data = await store.get(\"sol\");\n        return data;\n    }\n    async removeWalletFromDB(id) {\n        const db = await this.initDB();\n        const store = db.transaction(this.STORE_NAME, \"readwrite\").objectStore(this.STORE_NAME);\n        const existingData = await store.get(\"sol\") || {};\n        delete existingData[id];\n        await store.put(existingData, \"sol\");\n    }\n    constructor(){\n        this.DB_NAME = \"walletDB\";\n        this.DB_VERSION = 1;\n        this.STORE_NAME = \"wallets\";\n        console.log(\"DbService constructor\");\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (DbService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvZGJVdGlscy50cyIsIm1hcHBpbmdzIjoiOztBQUE2QjtBQUU3QixNQUFNQztJQVNGLE1BQWNDLFNBQVM7UUFDbkIsT0FBT0YsMkNBQU1BLENBQUMsSUFBSSxDQUFDRyxPQUFPLEVBQUUsSUFBSSxDQUFDQyxVQUFVLEVBQUU7WUFDekNDLFNBQVMsQ0FBQ0M7Z0JBQ04sSUFBSSxDQUFDQSxHQUFHQyxnQkFBZ0IsQ0FBQ0MsUUFBUSxDQUFDLElBQUksQ0FBQ0MsVUFBVSxHQUFHO29CQUNoREgsR0FBR0ksaUJBQWlCLENBQUMsSUFBSSxDQUFDRCxVQUFVO2dCQUN4QztZQUNKO1FBQ0o7SUFDSjtJQUVBLE1BQWFFLGlCQUFpQkMsUUFBZ0IsRUFBRUMsUUFBa0UsRUFBRTtRQUNoSCxNQUFNUCxLQUFLLE1BQU0sSUFBSSxDQUFDSixNQUFNO1FBQzVCLE1BQU1ZLFFBQVFSLEdBQUdTLFdBQVcsQ0FBQyxJQUFJLENBQUNOLFVBQVUsRUFBRSxhQUFhTyxXQUFXLENBQUMsSUFBSSxDQUFDUCxVQUFVO1FBQ3RGLE1BQU1RLGVBQWUsTUFBT0gsTUFBTUksR0FBRyxDQUFDLFVBQVcsQ0FBQztRQUNsREQsWUFBWSxDQUFDTCxTQUFTLEdBQUc7WUFBRUM7UUFBUztRQUNwQyxNQUFNQyxNQUFNSyxHQUFHLENBQUNGLGNBQWM7SUFDbEM7SUFFQSxNQUFhRyxvQkFBb0I7UUFDN0IsTUFBTWQsS0FBSyxNQUFNLElBQUksQ0FBQ0osTUFBTTtRQUM1QixNQUFNWSxRQUFRUixHQUFHUyxXQUFXLENBQUMsSUFBSSxDQUFDTixVQUFVLEVBQUUsWUFBWU8sV0FBVyxDQUFDLElBQUksQ0FBQ1AsVUFBVTtRQUNyRixNQUFNWSxPQUFPLE1BQU1QLE1BQU1JLEdBQUcsQ0FBQztRQUM3QixPQUFPRztJQUNYO0lBQ0EsTUFBYUMsbUJBQW1CQyxFQUFVLEVBQUU7UUFDeEMsTUFBTWpCLEtBQUssTUFBTSxJQUFJLENBQUNKLE1BQU07UUFDNUIsTUFBTVksUUFBUVIsR0FBR1MsV0FBVyxDQUFDLElBQUksQ0FBQ04sVUFBVSxFQUFFLGFBQWFPLFdBQVcsQ0FBQyxJQUFJLENBQUNQLFVBQVU7UUFDdEYsTUFBTVEsZUFBZSxNQUFPSCxNQUFNSSxHQUFHLENBQUMsVUFBVyxDQUFDO1FBQ2xELE9BQU9ELFlBQVksQ0FBQ00sR0FBRztRQUN2QixNQUFNVCxNQUFNSyxHQUFHLENBQUNGLGNBQWM7SUFFbEM7SUFuQ0FPLGFBQWM7YUFKTnJCLFVBQVU7YUFDVkMsYUFBYTthQUNiSyxhQUFhO1FBR2pCZ0IsUUFBUUMsR0FBRyxDQUFDO0lBQ2hCO0FBa0NKO0FBRUEsK0RBQWV6QixTQUFTQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvZGJVdGlscy50cz85Mjg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9wZW5EQiB9IGZyb20gJ2lkYic7XG5cbmNsYXNzIERiU2VydmljZSB7XG4gICAgcHJpdmF0ZSBEQl9OQU1FID0gJ3dhbGxldERCJztcbiAgICBwcml2YXRlIERCX1ZFUlNJT04gPSAxO1xuICAgIHByaXZhdGUgU1RPUkVfTkFNRSA9ICd3YWxsZXRzJztcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnRGJTZXJ2aWNlIGNvbnN0cnVjdG9yJyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhc3luYyBpbml0REIoKSB7XG4gICAgICAgIHJldHVybiBvcGVuREIodGhpcy5EQl9OQU1FLCB0aGlzLkRCX1ZFUlNJT04sIHtcbiAgICAgICAgICAgIHVwZ3JhZGU6IChkYikgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghZGIub2JqZWN0U3RvcmVOYW1lcy5jb250YWlucyh0aGlzLlNUT1JFX05BTUUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGRiLmNyZWF0ZU9iamVjdFN0b3JlKHRoaXMuU1RPUkVfTkFNRSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIHNhdmVNbmVtb25pY1RvREIobW5lbW9uaWM6IHN0cmluZywga2V5UGFpcnM6IHsgaWR4OiBudW1iZXIsIHB1YmxpY0tleTogc3RyaW5nLCBwcml2YXRlS2V5OiBzdHJpbmcgfVtdKSB7XG4gICAgICAgIGNvbnN0IGRiID0gYXdhaXQgdGhpcy5pbml0REIoKTtcbiAgICAgICAgY29uc3Qgc3RvcmUgPSBkYi50cmFuc2FjdGlvbih0aGlzLlNUT1JFX05BTUUsICdyZWFkd3JpdGUnKS5vYmplY3RTdG9yZSh0aGlzLlNUT1JFX05BTUUpO1xuICAgICAgICBjb25zdCBleGlzdGluZ0RhdGEgPSAoYXdhaXQgc3RvcmUuZ2V0KCdzb2wnKSkgfHwge307XG4gICAgICAgIGV4aXN0aW5nRGF0YVttbmVtb25pY10gPSB7IGtleVBhaXJzIH07XG4gICAgICAgIGF3YWl0IHN0b3JlLnB1dChleGlzdGluZ0RhdGEsICdzb2wnKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgZ2V0TW5lbW9uaWNGcm9tREIoKSB7XG4gICAgICAgIGNvbnN0IGRiID0gYXdhaXQgdGhpcy5pbml0REIoKTtcbiAgICAgICAgY29uc3Qgc3RvcmUgPSBkYi50cmFuc2FjdGlvbih0aGlzLlNUT1JFX05BTUUsICdyZWFkb25seScpLm9iamVjdFN0b3JlKHRoaXMuU1RPUkVfTkFNRSk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBzdG9yZS5nZXQoJ3NvbCcpO1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgcHVibGljIGFzeW5jIHJlbW92ZVdhbGxldEZyb21EQihpZDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGRiID0gYXdhaXQgdGhpcy5pbml0REIoKTtcbiAgICAgICAgY29uc3Qgc3RvcmUgPSBkYi50cmFuc2FjdGlvbih0aGlzLlNUT1JFX05BTUUsICdyZWFkd3JpdGUnKS5vYmplY3RTdG9yZSh0aGlzLlNUT1JFX05BTUUpO1xuICAgICAgICBjb25zdCBleGlzdGluZ0RhdGEgPSAoYXdhaXQgc3RvcmUuZ2V0KCdzb2wnKSkgfHwge307XG4gICAgICAgIGRlbGV0ZSBleGlzdGluZ0RhdGFbaWRdO1xuICAgICAgICBhd2FpdCBzdG9yZS5wdXQoZXhpc3RpbmdEYXRhLCAnc29sJyk7XG5cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERiU2VydmljZTsiXSwibmFtZXMiOlsib3BlbkRCIiwiRGJTZXJ2aWNlIiwiaW5pdERCIiwiREJfTkFNRSIsIkRCX1ZFUlNJT04iLCJ1cGdyYWRlIiwiZGIiLCJvYmplY3RTdG9yZU5hbWVzIiwiY29udGFpbnMiLCJTVE9SRV9OQU1FIiwiY3JlYXRlT2JqZWN0U3RvcmUiLCJzYXZlTW5lbW9uaWNUb0RCIiwibW5lbW9uaWMiLCJrZXlQYWlycyIsInN0b3JlIiwidHJhbnNhY3Rpb24iLCJvYmplY3RTdG9yZSIsImV4aXN0aW5nRGF0YSIsImdldCIsInB1dCIsImdldE1uZW1vbmljRnJvbURCIiwiZGF0YSIsInJlbW92ZVdhbGxldEZyb21EQiIsImlkIiwiY29uc3RydWN0b3IiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/dbUtils.ts\n"));

/***/ })

});